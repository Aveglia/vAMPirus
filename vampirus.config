/*
================================================================================================
                            Configuration File vAMPirus
================================================================================================
                                    vAMPirus
                                Author: Alex J. Veglia
                                Version: 1.0
------------------------------------------------------------------------------------------------
*/

params {
// --------------------------  EDIT variables where needed  -------------------------- //

    // Project/analyses- specific information
        // Project name - Name that will be used as a prefix for naming files by vAMPirus
             projtag="vAMPrun"
        // Path to metadata spreadsheet file to be used for plot
             metadata="/PATH/TO/metdata.csv"
        // Minimum number of hit counts for a sample to have to be included in the downstream statistical analyses and report generation
	         minimumCounts="1000"
        // Maximum number of iteration performed by metaMDS
             trymax="900"
	    // PATH to working directory
             workingdir="/PATH/TO/WORKING/Directory"
             email="your_email@web.com"
        // reads directory
             reads="/PATH/TO/reads/*_R{1,2}*fastq.gz"
        // Name of directory created to store output of vAMPirus analyses (Nextflow will create this directory in the working directory, or you can specify a path here)
             outdir="results"
        // Path to vAMPirus installation directory, will be filled automatically when startup script is run, otherwise, edit below
            vampdir="VAMPDIR"

    // Merged read length filtering parameters
        // Minimum merged read length - reads below the specified maximum read length will be used for counts only
            minLen="400"
        // Maximum merged read length - reads with length equal to the specified max read length will be used to generate uniques and ASVs
            maxLen="422"
        // Maximum expected error for vsearch merge command
            maxEE="1"

    // Primer Removal parameters
        // If not specifying primer sequences, forward and reverse reads will be trimmed by number of bases specified using "--GlobTrim #basesfromforward,#basesfromreverse"
            GlobTrim=""
        // Specific primer sequence on forward reads to be removed
            fwd=""
        // Reverse primer sequence
            rev=""

    // ASV generation and clustering parameters
        // Alpha value for denoising - the higher the alpha the higher the chance of false positives in ASV generation (1 or 2)
            alpha="1"
        // Minimum size or representation for sequence to be considered in ASV generation
            minSize="8"
        // Percent similarity to cluster nucleotide ASV sequences
            clusterNuclID=".85"
        // List of percent similarities to cluster nucleotide ASV sequences - must be separated by  a comma (ex. ".95,.96")
            clusterNuclIDlist=""
        // Default percent similarity to cluster aminoacid sequences
            clusterAAID=".97"
        // List of percent similarities to cluster aminoacid sequences - must be separated by ".95,.96"
            clusterAAIDlist=""
        // minimum length of AA in cluster_AA
            minAA="100"

    // Counts table generation parameters
        // Similarity ID to use for ASV counts table
            asvcountID=".97"
        // Protein counts table parameters
            // Minimum Bitscore for counts
                ProtCountsBit="50"
            // Minimum aminoacid sequence similarity for hit to count
                ProtCountID="85"
            // Minimum alignment length for hit to count
                ProtCountsLength="50"

    // Taxonomy assignment parameters
        // Specify name of database to use for analysis
            dbname="DATABASENAME"
        // Path to Directory where database is being stored
            dbdir="DATABASEDIR"
        // Toggle use of RefSeq header format; default is Reverence Viral DataBase (RVDB)
            refseq="F"

    // Phylogeny analysis parameters
        // Customs options for IQ-TREE (Example: "-option1 A -option2 B -option3 C -option4 D")
            iqCustomnt=""
            iqCustomaa=""
        // These options below you can set at the command like, for example, to set to use model from ModelTest-NG with parametric bootstrapping --ModelTnt --ModelTaa --parametric
        // Signal for IQ-TREE to use model determined by ModelTest-NG (Default is IQ-TREE will do automatic model testing with ModelFinder Plus)
            ModelTnt=false
            ModelTaa=false
        // Set to have non-parametric bootstrapping IQ-TREE to perform
            parametric=false
            nonparametric=false
        // Number of bootstraps (recommended 1000 for parametric and 100 for non-parametric)
            boots="1000"

/*
// ------------------------------------     STOP     ------------------------------------ //
// ---------------------- Do not modify variables below this line. ---------------------- //
// ------------------------- Proceed to modify processes at end ------------------------- //
// -------------------------------        If nedded       ------------------------------- //
*/

// Pipeline options
    help = false
    fullHelp = false
// Manadotory arguments
    Analyze=false
    DataCheck=false
// Clustering options
    // Cluster nucleotide sequences
        nOTU = false
    // Cluster by aminoacid translations and generate protein-based OTUs (pOTUs)
        pOTU = false
// Skip options
    // Skip all Read Processing steps
        skipReadProcessing=false
    // Skip quality control processes only
        skipFastQC = false
    // Skip adapter removal process only
        skipAdapterRemoval=false
    // Skip primer removal process only
        skipPrimerRemoval=false
    // Skip AminoTyping
        skipAminoTyping=false
    // Skip Taxonomy
        skipTaxonomy=false
    // Skip phylogeny
        skipPhylogeny = false
    // Skip EMBOSS analyses
        skipEMBOSS = false
    // Skip Reports
        skipReport = false
// Data check parameters
    datacheckntIDlist=".55,.65,.75,.80,.81,.82,.83,.84,.85,.86,.87,.88,.89,.90,.91,.92,.93,.94,.95,.96,.97,.98,.99"
    datacheckaaIDlist=".55,.65,.75,.80,.81,.82,.83,.84,.85,.86,.87,.88,.89,.90,.91,.92,.93,.94,.95,.96,.97,.98,.99,1.0"
// If not specifying primer sequences OR --GlobTrim, forward reads will be trimmed by number of bases specified below
        defaultFwdTrim="20"
// If not specifying primer sequences OR --GlobTrim, reverse reads will be trimmed by number of bases specified below
        defaultRevTrim="26"
// Directory for pipeline info
        tracedir="PipelinePerformance"
// Test dataset
	testing = null
}
/*
    Proceed to modify processes if needed. Choose the scheduler and options:
            Executor = SLURM, PBS, etc.
            Cluster Options = Partition, Nodes, Priority, Email, etc.
    If running locally leave the comments (the ""\\") on "executor" and "clusterOptions".
    For more info see the README and/or Nextflow documentation.
*/

process {
    withLabel: low_cpus {
        cpus='2'
        memory='15 GB'
        //executor='slurm'
        //clusterOptions='--cluster=cm2 --partition=cm2_tiny --qos=cm2_tiny --nodes=1'
    }
    withLabel: norm_cpus {
        cpus='4'
        memory='15 GB'
        //executor='slurm'
        //clusterOptions='--cluster=cm2 --partition=cm2_tiny --qos=cm2_tiny --nodes=1'
    }
    withLabel: high_cpus {
        cpus='6'
        memory='15 GB'
        //executor='slurm'
        //clusterOptions='--cluster=cm2 --partition=cm2_tiny --qos=cm2_tiny --nodes=1'
    }
    errorStrategy='finish'
}

// env variables (only for nextflow)
env.tools="$baseDir/scripts/"

timeline {
  enabled = true
  file = "${params.workingdir}/${params.outdir}/${params.tracedir}/vampirus_timeline.html"
}
report {
  enabled = true
  file = "${params.workingdir}/${params.outdir}/${params.tracedir}/vampirus_report.html"
}
trace {
  enabled = true
  file = "${params.workingdir}/${params.outdir}/${params.tracedir}/vampirus_trace.txt"
}
dag {
  enabled = true
  file = "${params.workingdir}/${params.outdir}/${params.tracedir}/vampirus_dag.html"
}

profiles {
    conda {
        process.conda = "${params.vampdir}/vampirus_env.yml"
    }
    docker {
        docker.enabled = true
    }
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
    }
    test {
        includeConfig 'conf/test.config'
    }
}
